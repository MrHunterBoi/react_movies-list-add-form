{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","checkUrl","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","URL_VALIDATING_PATTERN","NewMovie","addMovie","onAdd","count","setCount","formInputs","setFormInputs","checkIfUrlValid","url","test","isSubmittable","trim","onSubmit","preventDefault","disabled","App","moviesFromServer","moviesToView","setMoviesToView","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce35e2a8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  checkUrl?: (value: string) => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  checkUrl = () => true,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = (touched) && ((required && !value) || (!checkUrl(value)));\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\n// eslint-disable-next-line max-len\nconst URL_VALIDATING_PATTERN = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nexport const NewMovie: React.FC<Props> = ({ onAdd: addMovie }) => {\n  const [count, setCount] = useState(0);\n  const [formInputs, setFormInputs] = useState<Movie>({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const reset = () => {\n    setFormInputs({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setCount(count + 1);\n    addMovie(formInputs);\n\n    reset();\n  };\n\n  const checkIfUrlValid = (url: string) => {\n    return URL_VALIDATING_PATTERN.test(url);\n  };\n\n  const isSubmittable\n    = formInputs.title.trim() === ''\n    || formInputs.imgUrl.trim() === ''\n    || formInputs.imdbUrl.trim() === ''\n    || formInputs.imdbId.trim() === ''\n    || !checkIfUrlValid(formInputs.imgUrl)\n    || !checkIfUrlValid(formInputs.imdbUrl);\n\n  return (\n    <form onSubmit={handleSubmit} className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={formInputs.title}\n        onChange={value => setFormInputs({\n          ...formInputs,\n          title: value,\n        })}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={formInputs.description}\n        onChange={value => setFormInputs({\n          ...formInputs,\n          description: value,\n        })}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={formInputs.imgUrl}\n        onChange={value => setFormInputs({\n          ...formInputs,\n          imgUrl: value,\n        })}\n        checkUrl={checkIfUrlValid}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={formInputs.imdbUrl}\n        onChange={value => setFormInputs({\n          ...formInputs,\n          imdbUrl: value,\n        })}\n        checkUrl={checkIfUrlValid}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={formInputs.imdbId}\n        onChange={value => setFormInputs({\n          ...formInputs,\n          imdbId: value,\n        })}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isSubmittable}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport moviesFromServer from './api/movies.json';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [moviesToView, setMoviesToView] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie): void => {\n    setMoviesToView([...moviesToView, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesToView} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}